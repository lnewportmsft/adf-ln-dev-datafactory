{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ln-dev-datafactory"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"WWISftp1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWISftp1'"
		},
		"lgnstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lgnstorage'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"lgnsql2017_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lgnsql2017'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lgnsynapselake.dfs.core.windows.net/"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.microsoft.com"
		},
		"SmartFoodsApiLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://smartfoods.azurewebsites.net/api/"
		},
		"WWI_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://adf-ln-dev-kv.vault.azure.net/"
		},
		"AzureSqlDatabase1_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "azuresqldatabaselogin"
		},
		"WWISftp_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "adflabsftp.westus2.cloudapp.azure.com"
		},
		"WWISftp_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sftpuser"
		},
		"adflndevstorage_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "adflndevstorageconnectionstring"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartFoodsApiLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SmartFoodsApiLinkedService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWISftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('WWISftp1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWI_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('WWI_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lgnstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('lgnstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EASTUSIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lgnsql2017')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfcdc1')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "Sales.SalesOrderDetail",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "format",
											"value": "table"
										},
										{
											"name": "store",
											"value": "sqlserver"
										},
										{
											"name": "enableCdc",
											"value": true
										},
										{
											"name": "skipInitialLoad",
											"value": false
										},
										{
											"name": "schemaName",
											"value": "Sales"
										},
										{
											"name": "tableName",
											"value": "SalesOrderDetail"
										},
										{
											"name": "waterMarkColumn",
											"value": "ModifiedDate"
										},
										{
											"name": "databaseType",
											"value": "databaseType"
										},
										{
											"name": "database",
											"value": "database"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "lgnsql2017",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "SqlServer",
							"type": "linkedservicetype",
							"isInlineDataset": true
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "lgnsynapsefs/delta",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "format",
											"value": "delta"
										},
										{
											"name": "container",
											"value": "lgnsynapsefs"
										},
										{
											"name": "fileSystem",
											"value": "lgnsynapsefs"
										},
										{
											"name": "mergeSchema",
											"value": true
										},
										{
											"name": "autoCompact",
											"value": true
										},
										{
											"name": "optimizedWrite",
											"value": true
										},
										{
											"name": "deletable",
											"value": false
										},
										{
											"name": "insertable",
											"value": true
										},
										{
											"name": "updateable",
											"value": false
										},
										{
											"name": "upsertable",
											"value": false
										},
										{
											"name": "skipDuplicateMapInputs",
											"value": true
										},
										{
											"name": "skipDuplicateMapOutputs",
											"value": true
										},
										{
											"name": "folderPath",
											"value": "delta"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureBlobFS",
							"type": "linkedservicetype",
							"isInlineDataset": true
						},
						"DataMapperMappings": [],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15
					},
					"mode": "Non-continuous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdlsGen2BlobJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container for JSON format.",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "JSON Format"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXFDelimitedTextBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lgnstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"filetype": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().filename}.@{dataset().filetype}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lgnstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeRESTAPI_Records_Upsert')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Profisee members update REST API call.",
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Profisee REST API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(\n'records/',\ndataset().entityId, \n'/?isUpsert=true'\n)\n",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartFoodsCustomerApiJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SmartFoodsApiLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"authCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "smartfoods?code=@{dataset().authCode}",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SmartFoodsApiLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartFoodsTransactionApiCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SmartFoodsApiLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"authCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "smartfoods?code=@{dataset().authCode}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SmartFoodsApiLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "WWI_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureSqlDatabase1_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWISftp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('WWISftp_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('WWISftp_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "WWI_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "WWISftpPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adflndevstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "WWI_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('adflndevstorage_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Flatten')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "lgnstorage",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          goods as (customers as string[], orders as (orderId as short, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as short)[]))[], trade as boolean),",
						"          location as string,",
						"          name as string,",
						"          satellites as string[]",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'json',",
						"     container: 'raw',",
						"     fileName: 'complexjson.json',",
						"     documentForm: 'singleDocument') ~> source1",
						"source1 foldDown(unroll(goods.orders.shipped.orderItems, goods.orders),",
						"     mapColumn(",
						"          name,",
						"          orderId = goods.orders.orderId,",
						"          itemName = goods.orders.shipped.orderItems.itemName,",
						"          itemQty = goods.orders.shipped.orderItems.itemQty,",
						"          location",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'lgnsynapsefs',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lgnstorage')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lgnsql2017')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('lgnsql2017_connectionString')]"
				},
				"connectVia": {
					"referenceName": "lgnsql2017",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/lgnsql2017')]"
			]
		}
	]
}